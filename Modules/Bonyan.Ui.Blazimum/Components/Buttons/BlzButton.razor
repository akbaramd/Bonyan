@namespace Bonyan.Ui.Blazimum
@using Bonyan.Ui.Blazimum.Components.Buttons
@inherits Bonyan.Ui.Blazimum.Bases.BlzBaseComponent

<button id="@Id" class="blz-button @SizeClass @VariantClass @Class"
        style="@Style"
        type="@ButtonType"
        @onclick="HandleClick"
        disabled="@IsDisabled"
        role="button"
        @attributes="AdditionalAttributes">
    @ChildContent
</button>

@code {
    // Parameters to set button size, variant, type, and child content
    [Parameter]
    public ButtonSize Size { get; set; } = ButtonSize.Default;

    [Parameter]
    public ButtonVariant Variant { get; set; } = ButtonVariant.Primary;

    [Parameter]
    public bool IsDisabled { get; set; } = false;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public ButtonType ButtonType { get; set; } = ButtonType.Button;

    // Determines the CSS class for the button size based on the Size parameter
    private string SizeClass => Size switch
    {
        ButtonSize.Small => "blz-button-small",
        ButtonSize.Large => "blz-button-large",
        _ => "blz-button-default"
    };

    // Determines the CSS class for the button variant based on the Variant parameter
    private string VariantClass => Variant switch
    {
        ButtonVariant.Primary => "blz-button-primary",
        ButtonVariant.Secondary => "blz-button-secondary",
        _ => "blz-button-neutral"
    };

    // Handles the button click event if the button is not disabled
    private async Task HandleClick(MouseEventArgs e)
    {
        if (!IsDisabled && OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync(e);
        }
    }
}