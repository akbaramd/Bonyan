@page "{id:guid}"
@using Bonyan.Novino.Module.UserManagement.Abstractions.Zones.DetailsPage
@model Bonyan.Novino.Module.UserManagement.Areas.UserManagement.Pages.User.DetailModel
@{
    ViewData["Title"] = $"جزئیات کاربر - {Model.User.FullName}";
}

<div class="row">
    <div class="col-12">
        <div class="page-title-box d-flex flex-column flex-sm-row gap-2
            align-items-start align-items-sm-center justify-content-sm-between">
            <h4 class="mb-sm-0">
                <span>جزئیات کاربر</span>
            </h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Home", new {area = ""})">داشبورد</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "User", new {area = "UserManagement"})">مدیریت کاربران</a>
                    </li>
                    <li class="breadcrumb-item active">جزئیات کاربر</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        @if (Model.ErrorMessage != null)
        {
            <div class="alert alert-danger alert-dismissible alert-solid alert-label-icon fade show" role="alert">
                <i class="ri-error-warning-line label-icon"></i><strong>خطا</strong> @Model.ErrorMessage
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        @if (Model.SuccessMessage != null)
        {
            <div class="alert alert-success alert-dismissible alert-solid alert-label-icon fade show" role="alert">
                <i class="ri-check-double-line label-icon"></i><strong>موفق</strong> @Model.SuccessMessage
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- User Profile Card -->
        <div class="card">
            <div class="card-body">
                @await Html.RenderZoneAsync("UserManagementUserDetailPageHeader", new UserDetailPageHeaderZone()
                {
                    UserId = Model.User.Id,
                  
                })
            </div>
        </div>
        <div class="card">
        <div class="card-body">
                @await Html.RenderTabZoneAsync(new UserDetailPageTabZone()
                {
                    UserId = Model.User.Id,
                }, "user-detail-tabs", "tab-container")
        </div>
        </div>
    </div>
</div>

<!-- User Actions Zone -->
@await Html.RenderZoneAsync( new UserDetailPageActionsZone()
{
    UserId = Model.User.Id,
   
})

<!-- Change Password Modal -->
@await Html.RenderZoneAsync( new UserDetailPageModalZone()
{
    UserId = Model.User.Id,
  
})

<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">
                    <i class="ri-lock-password-line me-2"></i>تغییر رمز عبور
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="ChangePassword" id="changePasswordForm">
                <div class="modal-body">
                    <input type="hidden" name="UserId" value="@Model.User.Id" />
                    
                    <div class="mb-3">
                        <label class="form-label">نوع تغییر رمز</label>
                        <div class="d-flex gap-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="PasswordChangeType" id="manualPassword" value="manual" checked>
                                <label class="form-check-label" for="manualPassword">
                                    تعیین دستی
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="PasswordChangeType" id="randomPassword" value="random">
                                <label class="form-check-label" for="randomPassword">
                                    تولید خودکار
                                </label>
                            </div>
                        </div>
                    </div>
                    
                    <div id="manualPasswordSection">
                        <div class="mb-3">
                            <label class="form-label">رمز عبور جدید</label>
                            <div class="input-group">
                                <input type="password" class="form-control" name="NewPassword" id="newPassword" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                                    <i class="ri-eye-line"></i>
                                </button>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">تأیید رمز عبور</label>
                            <div class="input-group">
                                <input type="password" class="form-control" name="ConfirmPassword" id="confirmPassword" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="ri-eye-line"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div id="randomPasswordSection" style="display: none;">
                        <div class="alert alert-info">
                            <i class="ri-information-line me-2"></i>
                            رمز عبور جدید به صورت خودکار تولید خواهد شد و برای کاربر ارسال می‌شود.
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="ForceChangePassword" id="forceChangePassword" checked>
                            <label class="form-check-label" for="forceChangePassword">
                                اجبار تغییر رمز عبور در ورود بعدی
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">انصراف</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="ri-save-line align-bottom me-1"></i>تغییر رمز عبور
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Password change type toggle
            const manualRadio = document.getElementById('manualPassword');
            const randomRadio = document.getElementById('randomPassword');
            const manualSection = document.getElementById('manualPasswordSection');
            const randomSection = document.getElementById('randomPasswordSection');
            
            function togglePasswordSections() {
                if (manualRadio.checked) {
                    manualSection.style.display = 'block';
                    randomSection.style.display = 'none';
                } else {
                    manualSection.style.display = 'none';
                    randomSection.style.display = 'block';
                }
            }
            
            manualRadio.addEventListener('change', togglePasswordSections);
            randomRadio.addEventListener('change', togglePasswordSections);
            
            // Password toggle functionality
            function setupPasswordToggle(toggleId, inputId) {
                const toggle = document.getElementById(toggleId);
                const input = document.getElementById(inputId);
                
                if (toggle && input) {
                    toggle.addEventListener('click', function() {
                        const type = input.type === 'password' ? 'text' : 'password';
                        input.type = type;
                        const icon = toggle.querySelector('i');
                        icon.className = type === 'password' ? 'ri-eye-line' : 'ri-eye-off-line';
                    });
                }
            }
            
            setupPasswordToggle('toggleNewPassword', 'newPassword');
            setupPasswordToggle('toggleConfirmPassword', 'confirmPassword');
            
            // Form validation
            const changePasswordForm = document.getElementById('changePasswordForm');
            if (changePasswordForm) {
                changePasswordForm.addEventListener('submit', function(e) {
                    const manualRadio = document.getElementById('manualPassword');
                    const newPassword = document.getElementById('newPassword');
                    const confirmPassword = document.getElementById('confirmPassword');
                    
                    if (manualRadio.checked) {
                        if (!newPassword.value) {
                            e.preventDefault();
                            alert('لطفاً رمز عبور جدید را وارد کنید.');
                            return;
                        }
                        
                        if (newPassword.value !== confirmPassword.value) {
                            e.preventDefault();
                            alert('رمز عبور و تأیید آن مطابقت ندارند.');
                            return;
                        }
                        
                        if (newPassword.value.length < 6) {
                            e.preventDefault();
                            alert('رمز عبور باید حداقل 6 کاراکتر باشد.');
                            return;
                        }
                    }
                });
            }
            
            // Auto close alerts
            window.setTimeout(function() {
                $(".alert-dismissible").fadeTo(500, 0).slideUp(500, function() {
                    $(this).remove();
                });
            }, 5000);
        });
        
        // Delete user function
        function deleteUser(userId, userName) {
            if (confirm('آیا از حذف کاربر "' + userName + '" اطمینان دارید؟\n\nاین عملیات قابل بازگشت نیست.')) {
                // Show loading state
                var deleteButton = event.target.closest('button');
                var originalContent = deleteButton.innerHTML;
                deleteButton.innerHTML = '<i class="ri-loader-4-line align-bottom"></i>';
                deleteButton.disabled = true;
                
                // Send delete request
                fetch('@Url.Action("Delete", "User", new { area = "UserManagement" })/' + userId, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                .then(response => {
                    if (response.ok) {
                        // Redirect to user list
                        window.location.href = '@Url.Action("Index", "User", new { area = "UserManagement" })';
                    } else {
                        throw new Error('خطا در حذف کاربر');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('خطا در حذف کاربر: ' + error.message);
                    
                    // Restore button state
                    deleteButton.innerHTML = originalContent;
                    deleteButton.disabled = false;
                });
            }
        }
    </script>
} 